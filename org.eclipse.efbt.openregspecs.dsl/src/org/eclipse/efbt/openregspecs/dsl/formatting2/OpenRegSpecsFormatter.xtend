/*
 * generated by Xtext 2.27.0
 */
package org.eclipse.efbt.openregspecs.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.efbt.openregspecs.dsl.services.OpenRegSpecsGrammarAccess
import org.eclipse.efbt.openregspecs.dsl.open_reg_specs.RequirementsModule
import org.eclipse.efbt.openregspecs.dsl.open_reg_specs.Scenario
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class OpenRegSpecsFormatter extends AbstractFormatter2 {
	
	@Inject extension OpenRegSpecsGrammarAccess

	def dispatch void format(Scenario scenario, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		scenario.data_constraints.format
	}

	def dispatch void format(RequirementsModule requirementsModule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (titledRequirementsSection : requirementsModule.rules) {
			titledRequirementsSection.format
		}
		requirementsModule.allowedtypes.format
	}
	
	// TODO: implement for WorkflowModule, ViewModule, TestModule, XClass, XEnum, ServiceTask, SubProcess, ScriptTask, TitledRequirementsSection, AllowedTypes, TagGroup, XPackage, LayerSQL, View, Test
}
