/*
 * generated by Xtext 2.29.0
 */
package org.eclipse.efbt.ecore4reg.dsl.formatting2;

import org.eclipse.efbt.ecore4reg.dsl.ecore4reg.Import;
import org.eclipse.efbt.ecore4reg.dsl.ecore4reg.RequirementsModule;
import org.eclipse.efbt.ecore4reg.dsl.ecore4reg.Scenario;
import org.eclipse.efbt.ecore4reg.dsl.ecore4reg.TitledRequirementsSection;
import org.eclipse.xtext.formatting2.AbstractJavaFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument;

public class Ecore4RegFormatter extends AbstractJavaFormatter {

	protected void format(Scenario scenario, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		doc.format(scenario.getData_constraints());
	}

	protected void format(RequirementsModule requirementsModule, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Import _import : requirementsModule.getImports()) {
			doc.format(_import);
		}
		for (TitledRequirementsSection titledRequirementsSection : requirementsModule.getRules()) {
			doc.format(titledRequirementsSection);
		}
		doc.format(requirementsModule.getAllowedtypes());
	}
	
	// TODO: implement for WorkflowModule, ViewModule, TestModule, ELClass, ELEnum, ServiceTask, SubProcess, ScriptTask, TitledRequirementsSection, AllowedTypes, Module, TagGroup, ELPackage, LayerSQL, View, Test
}
