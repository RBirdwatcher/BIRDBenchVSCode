/*******************************************************************************
 * Copyright (c) 2020 Bird Software Solutions Ltd
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *    Neil Mackenzie - initial API and implementation
 *******************************************************************************/
module org.eclipse.efbt.ecore4reg.dsl.GenerateEcore4Reg

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

var rootPath = ".."

Workflow {

	
	
    bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = "${rootPath}"
    	scanClassPath = true
    }
	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator {
		genModel = "platform:/resource/org.eclipse.efbt.ecore4reg.dsl/model/ecore4reg.genmodel"
		srcPath = "platform:/resource/org.eclipse.efbt.ecore4reg.dsl/emf-gen"
		}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.eclipse.efbt.ecore4reg.dsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = false
				}
				genericIde = {
					enabled = true
				}
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.eclipse.efbt.ecore4reg.dsl.Ecore4Reg"
			fileExtensions = "ecore4reg"
			referencedResource = "platform:/resource/org.eclipse.efbt.ecore4reg.dsl/model/ecore4reg.genmodel"
			referencedResource = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
				generateXtendStub = false
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateStub = true
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}

	
}
